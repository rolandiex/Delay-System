	/** Keitenai Speed Hack Protection **/
	switch(skill_id){
		case SM_BASH:							if(sd && sd->K_LOCK_SM_BASH)				return false;	break;
		case SM_MAGNUM:							if(sd && sd->K_LOCK_SM_MAGNUM)				return false;	break;
		case MG_NAPALMBEAT:						if(sd && sd->K_LOCK_MG_NAPALMBEAT)			return false;	break;
		case MG_SOULSTRIKE:						if(sd && sd->K_LOCK_MG_SOULSTRIKE)			return false;	break;
		case MG_COLDBOLT:						if(sd && sd->K_LOCK_MG_COLDBOLT)			return false;	break;
		case MG_FROSTDIVER:						if(sd && sd->K_LOCK_MG_FROSTDIVER)			return false;	break;
		case MG_STONECURSE:						if(sd && sd->K_LOCK_MG_STONECURSE)			return false;	break;
		case MG_FIREBALL:						if(sd && sd->K_LOCK_MG_FIREBALL)			return false;	break;
		case MG_FIREWALL:						if(sd && sd->K_LOCK_MG_FIREWALL)			return false;	break;
		case MG_FIREBOLT:						if(sd && sd->K_LOCK_MG_FIREBOLT)			return false;	break;
		case MG_LIGHTNINGBOLT:					if(sd && sd->K_LOCK_MG_LIGHTNINGBOLT)		return false;	break;
		case MG_THUNDERSTORM:					if(sd && sd->K_LOCK_MG_THUNDERSTORM)		return false;	break;
		case AL_HEAL:							if(sd && sd->K_LOCK_AL_HEAL)				return false;	break;
		case AL_DECAGI:							if(sd && sd->K_LOCK_AL_DECAGI)				return false;	break;
		case AL_CRUCIS:							if(sd && sd->K_LOCK_AL_CRUCIS)				return false;	break;
		case MC_MAMMONITE:						if(sd && sd->K_LOCK_MC_MAMMONITE)			return false;	break;
		case AC_DOUBLE:							if(sd && sd->K_LOCK_AC_DOUBLE)				return false;	break;
		case AC_SHOWER:							if(sd && sd->K_LOCK_AC_SHOWER)				return false;	break;
		case TF_POISON:							if(sd && sd->K_LOCK_TF_POISON)				return false;	break;
		case KN_PIERCE:							if(sd && sd->K_LOCK_KN_PIERCE)				return false;	break;
		case KN_BRANDISHSPEAR:					if(sd && sd->K_LOCK_KN_BRANDISHSPEAR)		return false;	break;
		case KN_SPEARSTAB:						if(sd && sd->K_LOCK_KN_SPEARSTAB)			return false;	break;
		case KN_SPEARBOOMERANG:					if(sd && sd->K_LOCK_KN_SPEARBOOMERANG)		return false;	break;
		case KN_BOWLINGBASH:					if(sd && sd->K_LOCK_KN_BOWLINGBASH)			return false;	break;
		case PR_LEXDIVINA:						if(sd && sd->K_LOCK_PR_LEXDIVINA)			return false;	break;
		case PR_TURNUNDEAD:						if(sd && sd->K_LOCK_PR_TURNUNDEAD)			return false;	break;
		case PR_LEXAETERNA:						if(sd && sd->K_LOCK_PR_LEXAETERNA)			return false;	break;
		case PR_MAGNUS:							if(sd && sd->K_LOCK_PR_MAGNUS)				return false;	break;
		case WZ_FIREPILLAR:						if(sd && sd->K_LOCK_WZ_FIREPILLAR)			return false;	break;
		case WZ_SIGHTRASHER:					if(sd && sd->K_LOCK_WZ_SIGHTRASHER)			return false;	break;
		case WZ_FIREIVY:						if(sd && sd->K_LOCK_WZ_FIREIVY)				return false;	break;
		case WZ_METEOR:							if(sd && sd->K_LOCK_WZ_METEOR)				return false;	break;
		case WZ_JUPITEL:						if(sd && sd->K_LOCK_WZ_JUPITEL)				return false;	break;
		case WZ_VERMILION:						if(sd && sd->K_LOCK_WZ_VERMILION)			return false;	break;
		case WZ_WATERBALL:						if(sd && sd->K_LOCK_WZ_WATERBALL)			return false;	break;
		case WZ_ICEWALL:						if(sd && sd->K_LOCK_WZ_ICEWALL)				return false;	break;
		case WZ_FROSTNOVA:						if(sd && sd->K_LOCK_WZ_FROSTNOVA)			return false;	break;
		case WZ_STORMGUST:						if(sd && sd->K_LOCK_WZ_STORMGUST)			return false;	break;
		case WZ_EARTHSPIKE:						if(sd && sd->K_LOCK_WZ_EARTHSPIKE)			return false;	break;
		case WZ_HEAVENDRIVE:					if(sd && sd->K_LOCK_WZ_HEAVENDRIVE)			return false;	break;
		case WZ_QUAGMIRE:						if(sd && sd->K_LOCK_WZ_QUAGMIRE)			return false;	break;
		case WZ_ESTIMATION:						if(sd && sd->K_LOCK_WZ_ESTIMATION)			return false;	break;
		case BS_HAMMERFALL:						if(sd && sd->K_LOCK_BS_HAMMERFALL)			return false;	break;
		case HT_BLITZBEAT:						if(sd && sd->K_LOCK_HT_BLITZBEAT)			return false;	break;
		case AS_SONICBLOW:						if(sd && sd->K_LOCK_AS_SONICBLOW)			return false;	break;
		case AS_GRIMTOOTH:						if(sd && sd->K_LOCK_AS_GRIMTOOTH)			return false;	break;
		case AC_CHARGEARROW:					if(sd && sd->K_LOCK_AC_CHARGEARROW)			return false;	break;
		case TF_BACKSLIDING:					if(sd && sd->K_LOCK_TF_BACKSLIDING)			return false;	break;
		case MC_CARTREVOLUTION:					if(sd && sd->K_LOCK_MC_CARTREVOLUTION)		return false;	break;
		case AL_HOLYLIGHT:						if(sd && sd->K_LOCK_AL_HOLYLIGHT)			return false;	break;
		case RG_BACKSTAP:						if(sd && sd->K_LOCK_RG_BACKSTAP)			return false;	break;
		case RG_RAID:							if(sd && sd->K_LOCK_RG_RAID)				return false;	break;
		case RG_GRAFFITI:						if(sd && sd->K_LOCK_RG_GRAFFITI)			return false;	break;
		case RG_FLAGGRAFFITI:					if(sd && sd->K_LOCK_RG_FLAGGRAFFITI)		return false;	break;
		case RG_COMPULSION:						if(sd && sd->K_LOCK_RG_COMPULSION)			return false;	break;
		case RG_PLAGIARISM:						if(sd && sd->K_LOCK_RG_PLAGIARISM)			return false;	break;
		case AM_DEMONSTRATION:					if(sd && sd->K_LOCK_AM_DEMONSTRATION)		return false;	break;
		case AM_ACIDTERROR:						if(sd && sd->K_LOCK_AM_ACIDTERROR)			return false;	break;
		case AM_POTIONPITCHER:					if(sd && sd->K_LOCK_AM_POTIONPITCHER)		return false;	break;
		case AM_CANNIBALIZE:					if(sd && sd->K_LOCK_AM_CANNIBALIZE)			return false;	break;
		case AM_SPHEREMINE:						if(sd && sd->K_LOCK_AM_SPHEREMINE)			return false;	break;
		case AM_FLAMECONTROL:					if(sd && sd->K_LOCK_AM_FLAMECONTROL)		return false;	break;
		case AM_DRILLMASTER:					if(sd && sd->K_LOCK_AM_DRILLMASTER)			return false;	break;
		case CR_SHIELDBOOMERANG:				if(sd && sd->K_LOCK_CR_SHIELDBOOMERANG)		return false;	break;
		case CR_HOLYCROSS:						if(sd && sd->K_LOCK_CR_HOLYCROSS)			return false;	break;
		case CR_GRANDCROSS:						if(sd && sd->K_LOCK_CR_GRANDCROSS)			return false;	break;
		case MO_CALLSPIRITS:					if(sd && sd->K_LOCK_MO_CALLSPIRITS)			return false;	break;
		case MO_ABSORBSPIRITS:					if(sd && sd->K_LOCK_MO_ABSORBSPIRITS)		return false;	break;
		case MO_BODYRELOCATION:					if(sd && sd->K_LOCK_MO_BODYRELOCATION)		return false;	break;
		case MO_INVESTIGATE:					if(sd && sd->K_LOCK_MO_INVESTIGATE)			return false;	break;
		case MO_FINGEROFFENSIVE:				if(sd && sd->K_LOCK_MO_FINGEROFFENSIVE)		return false;	break;
		case MO_EXPLOSIONSPIRITS:				if(sd && sd->K_LOCK_MO_EXPLOSIONSPIRITS)	return false;	break;
		case MO_EXTREMITYFIST:					if(sd && sd->K_LOCK_MO_EXTREMITYFIST)		return false;	break;
		case MO_CHAINCOMBO:						if(sd && sd->K_LOCK_MO_CHAINCOMBO)			return false;	break;
		case MO_COMBOFINISH:					if(sd && sd->K_LOCK_MO_COMBOFINISH)			return false;	break;
		case SA_CASTCANCEL:						if(sd && sd->K_LOCK_SA_CASTCANCEL)			return false;	break;
		case SA_SPELLBREAKER:					if(sd && sd->K_LOCK_SA_SPELLBREAKER)		return false;	break;
		case SA_DISPELL:						if(sd && sd->K_LOCK_SA_DISPELL)				return false;	break;
		case SA_ABRACADABRA:					if(sd && sd->K_LOCK_SA_ABRACADABRA)			return false;	break;
		case SA_MONOCELL:						if(sd && sd->K_LOCK_SA_MONOCELL)			return false;	break;
		case SA_CLASSCHANGE:					if(sd && sd->K_LOCK_SA_CLASSCHANGE)			return false;	break;
		case SA_SUMMONMONSTER:					if(sd && sd->K_LOCK_SA_SUMMONMONSTER)		return false;	break;
		case SA_REVERSEORCISH:					if(sd && sd->K_LOCK_SA_REVERSEORCISH)		return false;	break;
		case SA_DEATH:							if(sd && sd->K_LOCK_SA_DEATH)				return false;	break;
		case SA_FORTUNE:						if(sd && sd->K_LOCK_SA_FORTUNE)				return false;	break;
		case SA_TAMINGMONSTER:					if(sd && sd->K_LOCK_SA_TAMINGMONSTER)		return false;	break;
		case SA_QUESTION:						if(sd && sd->K_LOCK_SA_QUESTION)			return false;	break;
		case SA_GRAVITY:						if(sd && sd->K_LOCK_SA_GRAVITY)				return false;	break;
		case SA_LEVELUP:						if(sd && sd->K_LOCK_SA_LEVELUP)				return false;	break;
		case SA_INSTANTDEATH:					if(sd && sd->K_LOCK_SA_INSTANTDEATH)		return false;	break;
		case SA_FULLRECOVERY:					if(sd && sd->K_LOCK_SA_FULLRECOVERY)		return false;	break;
		case SA_COMA:							if(sd && sd->K_LOCK_SA_COMA)				return false;	break;
		case BD_ADAPTATION:						if(sd && sd->K_LOCK_BD_ADAPTATION)			return false;	break;
		case BD_ENCORE:							if(sd && sd->K_LOCK_BD_ENCORE)				return false;	break;
		case BD_LULLABY:						if(sd && sd->K_LOCK_BD_LULLABY)				return false;	break;
		case BD_RICHMANKIM:						if(sd && sd->K_LOCK_BD_RICHMANKIM)			return false;	break;
		case BA_MUSICALSTRIKE:					if(sd && sd->K_LOCK_BA_MUSICALSTRIKE)		return false;	break;
		case BA_DISSONANCE:						if(sd && sd->K_LOCK_BA_DISSONANCE)			return false;	break;
		case BA_FROSTJOKER:						if(sd && sd->K_LOCK_BA_FROSTJOKER)			return false;	break;
		case BA_WHISTLE:						if(sd && sd->K_LOCK_BA_WHISTLE)				return false;	break;
		case BA_ASSASSINCROSS:					if(sd && sd->K_LOCK_BA_ASSASSINCROSS)		return false;	break;
		case BA_POEMBRAGI:						if(sd && sd->K_LOCK_BA_POEMBRAGI)			return false;	break;
		case BA_APPLEIDUN:						if(sd && sd->K_LOCK_BA_APPLEIDUN)			return false;	break;
		case DC_THROWARROW:						if(sd && sd->K_LOCK_DC_THROWARROW)			return false;	break;
		case DC_UGLYDANCE:						if(sd && sd->K_LOCK_DC_UGLYDANCE)			return false;	break;
		case DC_SCREAM:							if(sd && sd->K_LOCK_DC_SCREAM)				return false;	break;
		case DC_HUMMING:						if(sd && sd->K_LOCK_DC_HUMMING)				return false;	break;
		case DC_DONTFORGETME:					if(sd && sd->K_LOCK_DC_DONTFORGETME)		return false;	break;
		case DC_FORTUNEKISS:					if(sd && sd->K_LOCK_DC_FORTUNEKISS)			return false;	break;
		case DC_SERVICEFORYOU:					if(sd && sd->K_LOCK_DC_SERVICEFORYOU)		return false;	break;
		case LK_FURY:							if(sd && sd->K_LOCK_LK_FURY)				return false;	break;
		case HW_MAGICCRASHER:					if(sd && sd->K_LOCK_HW_MAGICCRASHER)		return false;	break;
		case PA_PRESSURE:						if(sd && sd->K_LOCK_PA_PRESSURE)			return false;	break;
		case CH_PALMSTRIKE:						if(sd && sd->K_LOCK_CH_PALMSTRIKE)			return false;	break;
		case CH_TIGERFIST:						if(sd && sd->K_LOCK_CH_TIGERFIST)			return false;	break;
		case CH_CHAINCRUSH:						if(sd && sd->K_LOCK_CH_CHAINCRUSH)			return false;	break;
		case PF_SOULCHANGE:						if(sd && sd->K_LOCK_PF_SOULCHANGE)			return false;	break;
		case PF_SOULBURN:						if(sd && sd->K_LOCK_PF_SOULBURN)			return false;	break;
		case ASC_BREAKER:						if(sd && sd->K_LOCK_ASC_BREAKER)			return false;	break;
		case SN_FALCONASSAULT:					if(sd && sd->K_LOCK_SN_FALCONASSAULT)		return false;	break;
		case SN_SHARPSHOOTING:					if(sd && sd->K_LOCK_SN_SHARPSHOOTING)		return false;	break;
		case CR_ALCHEMY:						if(sd && sd->K_LOCK_CR_ALCHEMY)				return false;	break;
		case CR_SYNTHESISPOTION:				if(sd && sd->K_LOCK_CR_SYNTHESISPOTION)		return false;	break;
		case CG_ARROWVULCAN:					if(sd && sd->K_LOCK_CG_ARROWVULCAN)			return false;	break;
		case CG_MOONLIT:						if(sd && sd->K_LOCK_CG_MOONLIT)				return false;	break;
		case CG_MARIONETTE:						if(sd && sd->K_LOCK_CG_MARIONETTE)			return false;	break;
		case LK_SPIRALPIERCE:					if(sd && sd->K_LOCK_LK_SPIRALPIERCE)		return false;	break;
		case LK_HEADCRUSH:						if(sd && sd->K_LOCK_LK_HEADCRUSH)			return false;	break;
		case LK_JOINTBEAT:						if(sd && sd->K_LOCK_LK_JOINTBEAT)			return false;	break;
		case HW_NAPALMVULCAN:					if(sd && sd->K_LOCK_HW_NAPALMVULCAN)		return false;	break;
		case CH_SOULCOLLECT:					if(sd && sd->K_LOCK_CH_SOULCOLLECT)			return false;	break;
		case PF_MINDBREAKER:					if(sd && sd->K_LOCK_PF_MINDBREAKER)			return false;	break;
		case PF_SPIDERWEB:						if(sd && sd->K_LOCK_PF_SPIDERWEB)			return false;	break;
		case ASC_METEORASSAULT:					if(sd && sd->K_LOCK_ASC_METEORASSAULT)		return false;	break;
		case TK_STORMKICK:						if(sd && sd->K_LOCK_TK_STORMKICK)			return false;	break;
		case TK_DOWNKICK:						if(sd && sd->K_LOCK_TK_DOWNKICK)			return false;	break;
		case TK_TURNKICK:						if(sd && sd->K_LOCK_TK_TURNKICK)			return false;	break;
		case TK_JUMPKICK:						if(sd && sd->K_LOCK_TK_JUMPKICK)			return false;	break;
		case TK_POWER:							if(sd && sd->K_LOCK_TK_POWER)				return false;	break;
		case TK_HIGHJUMP:						if(sd && sd->K_LOCK_TK_HIGHJUMP)			return false;	break;
		case SL_KAIZEL:							if(sd && sd->K_LOCK_SL_KAIZEL)				return false;	break;
		case SL_KAAHI:							if(sd && sd->K_LOCK_SL_KAAHI)				return false;	break;
		case SL_KAUPE:							if(sd && sd->K_LOCK_SL_KAUPE)				return false;	break;
		case SL_KAITE:							if(sd && sd->K_LOCK_SL_KAITE)				return false;	break;
		case SL_KAINA:							if(sd && sd->K_LOCK_SL_KAINA)				return false;	break;
		case SL_STIN:							if(sd && sd->K_LOCK_SL_STIN)				return false;	break;
		case SL_STUN:							if(sd && sd->K_LOCK_SL_STUN)				return false;	break;
		case SL_SMA:							if(sd && sd->K_LOCK_SL_SMA)					return false;	break;
		case SL_SWOO:							if(sd && sd->K_LOCK_SL_SWOO)				return false;	break;
		case SL_SKE:							if(sd && sd->K_LOCK_SL_SKE)					return false;	break;
		case SL_SKA:							if(sd && sd->K_LOCK_SL_SKA)					return false;	break;
		case ST_FULLSTRIP:						if(sd && sd->K_LOCK_ST_FULLSTRIP)			return false;	break;
		case CR_SLIMPITCHER:					if(sd && sd->K_LOCK_CR_SLIMPITCHER)			return false;	break;
		case CR_FULLPROTECTION:					if(sd && sd->K_LOCK_CR_FULLPROTECTION)		return false;	break;
		case PA_SHIELDCHAIN:					if(sd && sd->K_LOCK_PA_SHIELDCHAIN)			return false;	break;
		case HP_MANARECHARGE:					if(sd && sd->K_LOCK_HP_MANARECHARGE)		return false;	break;
		case PF_DOUBLECASTING:					if(sd && sd->K_LOCK_PF_DOUBLECASTING)		return false;	break;
		case HW_GANBANTEIN:						if(sd && sd->K_LOCK_HW_GANBANTEIN)			return false;	break;
		case HW_GRAVITATION:					if(sd && sd->K_LOCK_HW_GRAVITATION)			return false;	break;
		case WS_CARTTERMINATION:				if(sd && sd->K_LOCK_WS_CARTTERMINATION)		return false;	break;
		case CG_HERMODE:						if(sd && sd->K_LOCK_CG_HERMODE)				return false;	break;
		case CG_TAROTCARD:						if(sd && sd->K_LOCK_CG_TAROTCARD)			return false;	break;
		case CR_ACIDDEMONSTRATION:				if(sd && sd->K_LOCK_CR_ACIDDEMONSTRATION)	return false;	break;
		case SL_HIGH:							if(sd && sd->K_LOCK_SL_HIGH)				return false;	break;
		case HT_POWER:							if(sd && sd->K_LOCK_HT_POWER)				return false;	break;
		case GS_TRIPLEACTION:					if(sd && sd->K_LOCK_GS_TRIPLEACTION)		return false;	break;
		case GS_BULLSEYE:						if(sd && sd->K_LOCK_GS_BULLSEYE)			return false;	break;
		case GS_MADNESSCANCEL:					if(sd && sd->K_LOCK_GS_MADNESSCANCEL)		return false;	break;
		case GS_INCREASING:						if(sd && sd->K_LOCK_GS_INCREASING)			return false;	break;
		case GS_MAGICALBULLET:					if(sd && sd->K_LOCK_GS_MAGICALBULLET)		return false;	break;
		case GS_CRACKER:						if(sd && sd->K_LOCK_GS_CRACKER)				return false;	break;
		case GS_SINGLEACTION:					if(sd && sd->K_LOCK_GS_SINGLEACTION)		return false;	break;
		case GS_CHAINACTION:					if(sd && sd->K_LOCK_GS_CHAINACTION)			return false;	break;
		case GS_TRACKING:						if(sd && sd->K_LOCK_GS_TRACKING)			return false;	break;
		case GS_DISARM:							if(sd && sd->K_LOCK_GS_DISARM)				return false;	break;
		case GS_PIERCINGSHOT:					if(sd && sd->K_LOCK_GS_PIERCINGSHOT)		return false;	break;
		case GS_RAPIDSHOWER:					if(sd && sd->K_LOCK_GS_RAPIDSHOWER)			return false;	break;
		case GS_DESPERADO:						if(sd && sd->K_LOCK_GS_DESPERADO)			return false;	break;
		case GS_GATLINGFEVER:					if(sd && sd->K_LOCK_GS_GATLINGFEVER)		return false;	break;
		case GS_DUST:							if(sd && sd->K_LOCK_GS_DUST)				return false;	break;
		case GS_FULLBUSTER:						if(sd && sd->K_LOCK_GS_FULLBUSTER)			return false;	break;
		case GS_SPREADATTACK:					if(sd && sd->K_LOCK_GS_SPREADATTACK)		return false;	break;
		case GS_GROUNDDRIFT:					if(sd && sd->K_LOCK_GS_GROUNDDRIFT)			return false;	break;
		case NJ_TOBIDOUGU:						if(sd && sd->K_LOCK_NJ_TOBIDOUGU)			return false;	break;
		case NJ_SYURIKEN:						if(sd && sd->K_LOCK_NJ_SYURIKEN)			return false;	break;
		case NJ_KUNAI:							if(sd && sd->K_LOCK_NJ_KUNAI)				return false;	break;
		case NJ_HUUMA:							if(sd && sd->K_LOCK_NJ_HUUMA)				return false;	break;
		case NJ_ZENYNAGE:						if(sd && sd->K_LOCK_NJ_ZENYNAGE)			return false;	break;
		case NJ_TATAMIGAESHI:					if(sd && sd->K_LOCK_NJ_TATAMIGAESHI)		return false;	break;
		case NJ_KASUMIKIRI:						if(sd && sd->K_LOCK_NJ_KASUMIKIRI)			return false;	break;
		case NJ_SHADOWJUMP:						if(sd && sd->K_LOCK_NJ_SHADOWJUMP)			return false;	break;
		case NJ_KIRIKAGE:						if(sd && sd->K_LOCK_NJ_KIRIKAGE)			return false;	break;
		case NJ_UTSUSEMI:						if(sd && sd->K_LOCK_NJ_UTSUSEMI)			return false;	break;
		case NJ_BUNSINJYUTSU:					if(sd && sd->K_LOCK_NJ_BUNSINJYUTSU)		return false;	break;
		case NJ_NINPOU:							if(sd && sd->K_LOCK_NJ_NINPOU)				return false;	break;
		case NJ_KOUENKA:						if(sd && sd->K_LOCK_NJ_KOUENKA)				return false;	break;
		case NJ_KAENSIN:						if(sd && sd->K_LOCK_NJ_KAENSIN)				return false;	break;
		case NJ_BAKUENRYU:						if(sd && sd->K_LOCK_NJ_BAKUENRYU)			return false;	break;
		case NJ_HYOUSENSOU:						if(sd && sd->K_LOCK_NJ_HYOUSENSOU)			return false;	break;
		case NJ_SUITON:							if(sd && sd->K_LOCK_NJ_SUITON)				return false;	break;
		case NJ_HYOUSYOURAKU:					if(sd && sd->K_LOCK_NJ_HYOUSYOURAKU)		return false;	break;
		case NJ_HUUJIN:							if(sd && sd->K_LOCK_NJ_HUUJIN)				return false;	break;
		case NJ_RAIGEKISAI:						if(sd && sd->K_LOCK_NJ_RAIGEKISAI)			return false;	break;
		case NJ_KAMAITACHI:						if(sd && sd->K_LOCK_NJ_KAMAITACHI)			return false;	break;
		case NJ_NEN:							if(sd && sd->K_LOCK_NJ_NEN)					return false;	break;
		case NJ_ISSEN:							if(sd && sd->K_LOCK_NJ_ISSEN)				return false;	break;
		case KN_CHARGEATK:						if(sd && sd->K_LOCK_KN_CHARGEATK)			return false;	break;
		case AS_VENOMKNIFE:						if(sd && sd->K_LOCK_AS_VENOMKNIFE)			return false;	break;
		case RG_CLOSECONFINE:					if(sd && sd->K_LOCK_RG_CLOSECONFINE)		return false;	break;
		case WZ_SIGHTBLASTER:					if(sd && sd->K_LOCK_WZ_SIGHTBLASTER)		return false;	break;
		case HT_PHANTASMIC:						if(sd && sd->K_LOCK_HT_PHANTASMIC)			return false;	break;
		case BA_PANGVOICE:						if(sd && sd->K_LOCK_BA_PANGVOICE)			return false;	break;
		case DC_WINKCHARM:						if(sd && sd->K_LOCK_DC_WINKCHARM)			return false;	break;
		case PR_REDEMPTIO:						if(sd && sd->K_LOCK_PR_REDEMPTIO)			return false;	break;
		case MO_KITRANSLATION:					if(sd && sd->K_LOCK_MO_KITRANSLATION)		return false;	break;
		case MO_BALKYOUNG:						if(sd && sd->K_LOCK_MO_BALKYOUNG)			return false;	break;
		case RK_SONICWAVE:						if(sd && sd->K_LOCK_RK_SONICWAVE)			return false;	break;
		case RK_DEATHBOUND:						if(sd && sd->K_LOCK_RK_DEATHBOUND)			return false;	break;
		case RK_HUNDREDSPEAR:					if(sd && sd->K_LOCK_RK_HUNDREDSPEAR)		return false;	break;
		case RK_WINDCUTTER:						if(sd && sd->K_LOCK_RK_WINDCUTTER)			return false;	break;
		case RK_IGNITIONBREAK:					if(sd && sd->K_LOCK_RK_IGNITIONBREAK)		return false;	break;
		case RK_DRAGONBREATH:					if(sd && sd->K_LOCK_RK_DRAGONBREATH)		return false;	break;
		case RK_CRUSHSTRIKE:					if(sd && sd->K_LOCK_RK_CRUSHSTRIKE)			return false;	break;
		case RK_STORMBLAST:						if(sd && sd->K_LOCK_RK_STORMBLAST)			return false;	break;
		case RK_PHANTOMTHRUST:					if(sd && sd->K_LOCK_RK_PHANTOMTHRUST)		return false;	break;
		case GC_CROSSIMPACT:					if(sd && sd->K_LOCK_GC_CROSSIMPACT)			return false;	break;
		case GC_WEAPONCRUSH:					if(sd && sd->K_LOCK_GC_WEAPONCRUSH)			return false;	break;
		case GC_ROLLINGCUTTER:					if(sd && sd->K_LOCK_GC_ROLLINGCUTTER)		return false;	break;
		case GC_CROSSRIPPERSLASHER:				if(sd && sd->K_LOCK_GC_CROSSRIPPERSLASHER)	return false;	break;
		case AB_JUDEX:							if(sd && sd->K_LOCK_AB_JUDEX)				return false;	break;
		case AB_ADORAMUS:						if(sd && sd->K_LOCK_AB_ADORAMUS)			return false;	break;
		case AB_CHEAL:							if(sd && sd->K_LOCK_AB_CHEAL)				return false;	break;
		case AB_EPICLESIS:						if(sd && sd->K_LOCK_AB_EPICLESIS)			return false;	break;
		case AB_PRAEFATIO:						if(sd && sd->K_LOCK_AB_PRAEFATIO)			return false;	break;
		case AB_EUCHARISTICA:					if(sd && sd->K_LOCK_AB_EUCHARISTICA)		return false;	break;
		case AB_RENOVATIO:						if(sd && sd->K_LOCK_AB_RENOVATIO)			return false;	break;
		case AB_HIGHNESSHEAL:					if(sd && sd->K_LOCK_AB_HIGHNESSHEAL)		return false;	break;
		case AB_CLEARANCE:						if(sd && sd->K_LOCK_AB_CLEARANCE)			return false;	break;
		case AB_EXPIATIO:						if(sd && sd->K_LOCK_AB_EXPIATIO)			return false;	break;
		case AB_DUPLELIGHT:						if(sd && sd->K_LOCK_AB_DUPLELIGHT)			return false;	break;
		case AB_DUPLELIGHT_MELEE:				if(sd && sd->K_LOCK_AB_DUPLELIGHT_MELEE)	return false;	break;
		case AB_DUPLELIGHT_MAGIC:				if(sd && sd->K_LOCK_AB_DUPLELIGHT_MAGIC)	return false;	break;
		case AB_SILENTIUM:						if(sd && sd->K_LOCK_AB_SILENTIUM)			return false;	break;
		case WL_WHITEIMPRISON:					if(sd && sd->K_LOCK_WL_WHITEIMPRISON)		return false;	break;
		case WL_SOULEXPANSION:					if(sd && sd->K_LOCK_WL_SOULEXPANSION)		return false;	break;
		case WL_FROSTMISTY:						if(sd && sd->K_LOCK_WL_FROSTMISTY)			return false;	break;
		case WL_JACKFROST:						if(sd && sd->K_LOCK_WL_JACKFROST)			return false;	break;
		case WL_MARSHOFABYSS:					if(sd && sd->K_LOCK_WL_MARSHOFABYSS)		return false;	break;
		case WL_RADIUS:							if(sd && sd->K_LOCK_WL_RADIUS)				return false;	break;
		case WL_STASIS:							if(sd && sd->K_LOCK_WL_STASIS)				return false;	break;
		case WL_DRAINLIFE:						if(sd && sd->K_LOCK_WL_DRAINLIFE)			return false;	break;
		case WL_CRIMSONROCK:					if(sd && sd->K_LOCK_WL_CRIMSONROCK)			return false;	break;
		case WL_HELLINFERNO:					if(sd && sd->K_LOCK_WL_HELLINFERNO)			return false;	break;
		case WL_COMET:							if(sd && sd->K_LOCK_WL_COMET)				return false;	break;
		case WL_CHAINLIGHTNING:					if(sd && sd->K_LOCK_WL_CHAINLIGHTNING)		return false;	break;
		case WL_CHAINLIGHTNING_ATK:				if(sd && sd->K_LOCK_WL_CHAINLIGHTNING_ATK)	return false;	break;
		case WL_EARTHSTRAIN:					if(sd && sd->K_LOCK_WL_EARTHSTRAIN)			return false;	break;
		case WL_TETRAVORTEX:					if(sd && sd->K_LOCK_WL_TETRAVORTEX)			return false;	break;
		case WL_TETRAVORTEX_FIRE:				if(sd && sd->K_LOCK_WL_TETRAVORTEX_FIRE)	return false;	break;
		case WL_TETRAVORTEX_WATER:				if(sd && sd->K_LOCK_WL_TETRAVORTEX_WATER)	return false;	break;
		case WL_TETRAVORTEX_WIND:				if(sd && sd->K_LOCK_WL_TETRAVORTEX_WIND)	return false;	break;
		case WL_TETRAVORTEX_GROUND:				if(sd && sd->K_LOCK_WL_TETRAVORTEX_GROUND)	return false;	break;
		case WL_RELEASE:						if(sd && sd->K_LOCK_WL_RELEASE)				return false;	break;
		case WL_READING_SB:						if(sd && sd->K_LOCK_WL_READING_SB)			return false;	break;
		case WL_FREEZE_SP:						if(sd && sd->K_LOCK_WL_FREEZE_SP)			return false;	break;
		case RA_ARROWSTORM:						if(sd && sd->K_LOCK_RA_ARROWSTORM)			return false;	break;
		case RA_AIMEDBOLT:						if(sd && sd->K_LOCK_RA_AIMEDBOLT)			return false;	break;
		case RA_WUGSTRIKE:						if(sd && sd->K_LOCK_RA_WUGSTRIKE)			return false;	break;
		case RA_WUGBITE:						if(sd && sd->K_LOCK_RA_WUGBITE)				return false;	break;
		case NC_BOOSTKNUCKLE:					if(sd && sd->K_LOCK_NC_BOOSTKNUCKLE)		return false;	break;
		case NC_PILEBUNKER:						if(sd && sd->K_LOCK_NC_PILEBUNKER)			return false;	break;
		case NC_VULCANARM:						if(sd && sd->K_LOCK_NC_VULCANARM)			return false;	break;
		case NC_FLAMELAUNCHER:					if(sd && sd->K_LOCK_NC_FLAMELAUNCHER)		return false;	break;
		case NC_COLDSLOWER:						if(sd && sd->K_LOCK_NC_COLDSLOWER)			return false;	break;
		case NC_ARMSCANNON:						if(sd && sd->K_LOCK_NC_ARMSCANNON)			return false;	break;
		case NC_ACCELERATION:					if(sd && sd->K_LOCK_NC_ACCELERATION)		return false;	break;
		case NC_F_SIDESLIDE:					if(sd && sd->K_LOCK_NC_F_SIDESLIDE)			return false;	break;
		case NC_B_SIDESLIDE:					if(sd && sd->K_LOCK_NC_B_SIDESLIDE)			return false;	break;
		case NC_MAINFRAME:						if(sd && sd->K_LOCK_NC_MAINFRAME)			return false;	break;
		case NC_SHAPESHIFT:						if(sd && sd->K_LOCK_NC_SHAPESHIFT)			return false;	break;
		case NC_INFRAREDSCAN:					if(sd && sd->K_LOCK_NC_INFRAREDSCAN)		return false;	break;
		case NC_ANALYZE:						if(sd && sd->K_LOCK_NC_ANALYZE)				return false;	break;
		case NC_MAGNETICFIELD:					if(sd && sd->K_LOCK_NC_MAGNETICFIELD)		return false;	break;
		case NC_NEUTRALBARRIER:					if(sd && sd->K_LOCK_NC_NEUTRALBARRIER)		return false;	break;
		case NC_STEALTHFIELD:					if(sd && sd->K_LOCK_NC_STEALTHFIELD)		return false;	break;
		case NC_AXEBOOMERANG:					if(sd && sd->K_LOCK_NC_AXEBOOMERANG)		return false;	break;
		case NC_POWERSWING:						if(sd && sd->K_LOCK_NC_POWERSWING)			return false;	break;
		case NC_AXETORNADO:						if(sd && sd->K_LOCK_NC_AXETORNADO)			return false;	break;
		case NC_SILVERSNIPER:					if(sd && sd->K_LOCK_NC_SILVERSNIPER)		return false;	break;
		case NC_MAGICDECOY:						if(sd && sd->K_LOCK_NC_MAGICDECOY)			return false;	break;
		case NC_DISJOINT:						if(sd && sd->K_LOCK_NC_DISJOINT)			return false;	break;
		case SC_FATALMENACE:					if(sd && sd->K_LOCK_SC_FATALMENACE)			return false;	break;
		case SC_TRIANGLESHOT:					if(sd && sd->K_LOCK_SC_TRIANGLESHOT)		return false;	break;
		case SC_INVISIBILITY:					if(sd && sd->K_LOCK_SC_INVISIBILITY)		return false;	break;
		case SC_ENERVATION:						if(sd && sd->K_LOCK_SC_ENERVATION)			return false;	break;
		case SC_GROOMY:							if(sd && sd->K_LOCK_SC_GROOMY)				return false;	break;
		case SC_IGNORANCE:						if(sd && sd->K_LOCK_SC_IGNORANCE)			return false;	break;
		case SC_LAZINESS:						if(sd && sd->K_LOCK_SC_LAZINESS)			return false;	break;
		case SC_UNLUCKY:						if(sd && sd->K_LOCK_SC_UNLUCKY)				return false;	break;
		case SC_WEAKNESS:						if(sd && sd->K_LOCK_SC_WEAKNESS)			return false;	break;
		case SC_STRIPACCESSARY:					if(sd && sd->K_LOCK_SC_STRIPACCESSARY)		return false;	break;
		case SC_MANHOLE:						if(sd && sd->K_LOCK_SC_MANHOLE)				return false;	break;
		case SC_DIMENSIONDOOR:					if(sd && sd->K_LOCK_SC_DIMENSIONDOOR)		return false;	break;
		case SC_CHAOSPANIC:						if(sd && sd->K_LOCK_SC_CHAOSPANIC)			return false;	break;
		case SC_MAELSTROM:						if(sd && sd->K_LOCK_SC_MAELSTROM)			return false;	break;
		case SC_BLOODYLUST:						if(sd && sd->K_LOCK_SC_BLOODYLUST)			return false;	break;
		case SC_FEINTBOMB:						if(sd && sd->K_LOCK_SC_FEINTBOMB)			return false;	break;
		case LG_CANNONSPEAR:					if(sd && sd->K_LOCK_LG_CANNONSPEAR)			return false;	break;
		case LG_BANISHINGPOINT:					if(sd && sd->K_LOCK_LG_BANISHINGPOINT)		return false;	break;
		case LG_TRAMPLE:						if(sd && sd->K_LOCK_LG_TRAMPLE)				return false;	break;
		case LG_PINPOINTATTACK:					if(sd && sd->K_LOCK_LG_PINPOINTATTACK)		return false;	break;
		case LG_RAGEBURST:						if(sd && sd->K_LOCK_LG_RAGEBURST)			return false;	break;
		case LG_EXEEDBREAK:						if(sd && sd->K_LOCK_LG_EXEEDBREAK)			return false;	break;
		case LG_OVERBRAND:						if(sd && sd->K_LOCK_LG_OVERBRAND)			return false;	break;
		case LG_BANDING:						if(sd && sd->K_LOCK_LG_BANDING)				return false;	break;
		case LG_MOONSLASHER:					if(sd && sd->K_LOCK_LG_MOONSLASHER)			return false;	break;
		case LG_RAYOFGENESIS:					if(sd && sd->K_LOCK_LG_RAYOFGENESIS)		return false;	break;
		case LG_PIETY:							if(sd && sd->K_LOCK_LG_PIETY)				return false;	break;
		case LG_EARTHDRIVE:						if(sd && sd->K_LOCK_LG_EARTHDRIVE)			return false;	break;
		case LG_HESPERUSLIT:					if(sd && sd->K_LOCK_LG_HESPERUSLIT)			return false;	break;
		case SR_DRAGONCOMBO:					if(sd && sd->K_LOCK_SR_DRAGONCOMBO)			return false;	break;
		case SR_SKYNETBLOW:						if(sd && sd->K_LOCK_SR_SKYNETBLOW)			return false;	break;
		case SR_EARTHSHAKER:					if(sd && sd->K_LOCK_SR_EARTHSHAKER)			return false;	break;
		case SR_FALLENEMPIRE:					if(sd && sd->K_LOCK_SR_FALLENEMPIRE)		return false;	break;
		case SR_TIGERCANNON:					if(sd && sd->K_LOCK_SR_TIGERCANNON)			return false;	break;
		case SR_HELLGATE:						if(sd && sd->K_LOCK_SR_HELLGATE)			return false;	break;
		case SR_RAMPAGEBLASTER:					if(sd && sd->K_LOCK_SR_RAMPAGEBLASTER)		return false;	break;
		case SR_CRESCENTELBOW:					if(sd && sd->K_LOCK_SR_CRESCENTELBOW)		return false;	break;
		case SR_CURSEDCIRCLE:					if(sd && sd->K_LOCK_SR_CURSEDCIRCLE)		return false;	break;
		case SR_LIGHTNINGWALK:					if(sd && sd->K_LOCK_SR_LIGHTNINGWALK)		return false;	break;
		case SR_KNUCKLEARROW:					if(sd && sd->K_LOCK_SR_KNUCKLEARROW)		return false;	break;
		case SR_WINDMILL:						if(sd && sd->K_LOCK_SR_WINDMILL)			return false;	break;
		case SR_RAISINGDRAGON:					if(sd && sd->K_LOCK_SR_RAISINGDRAGON)		return false;	break;
		case SR_GENTLETOUCH:					if(sd && sd->K_LOCK_SR_GENTLETOUCH)			return false;	break;
		case SR_ASSIMILATEPOWER:				if(sd && sd->K_LOCK_SR_ASSIMILATEPOWER)		return false;	break;
		case SR_POWERVELOCITY:					if(sd && sd->K_LOCK_SR_POWERVELOCITY)		return false;	break;
		case SR_CRESCENTELBOW_AUTOSPELL:		if(sd && sd->K_LOCK_SR_CRESCENTELBOW_AUTOSPELL) return false;	break;
		case SR_GATEOFHELL:						if(sd && sd->K_LOCK_SR_GATEOFHELL)			return false;	break;
		case SR_GENTLETOUCH_QUIET:				if(sd && sd->K_LOCK_SR_GENTLETOUCH_QUIET)	return false;	break;
		case SR_GENTLETOUCH_CURE:				if(sd && sd->K_LOCK_SR_GENTLETOUCH_CURE)	return false;	break;
		case SR_GENTLETOUCH_ENERGYGAIN:			if(sd && sd->K_LOCK_SR_GENTLETOUCH_ENERGYGAIN) return false;	break;
		case SR_GENTLETOUCH_CHANGE:				if(sd && sd->K_LOCK_SR_GENTLETOUCH_CHANGE)	return false;	break;
		case SR_GENTLETOUCH_REVITALIZE:			if(sd && sd->K_LOCK_SR_GENTLETOUCH_REVITALIZE) return false;	break;
		case WA_SWING_DANCE:					if(sd && sd->K_LOCK_WA_SWING_DANCE)			return false;	break;
		case WA_SYMPHONY_OF_LOVER:				if(sd && sd->K_LOCK_WA_SYMPHONY_OF_LOVER)	return false;	break;
		case WA_MOONLIT_SERENADE:				if(sd && sd->K_LOCK_WA_MOONLIT_SERENADE)	return false;	break;
		case MI_RUSH_WINDMILL:					if(sd && sd->K_LOCK_MI_RUSH_WINDMILL)		return false;	break;
		case MI_ECHOSONG:						if(sd && sd->K_LOCK_MI_ECHOSONG)			return false;	break;
		case MI_HARMONIZE:						if(sd && sd->K_LOCK_MI_HARMONIZE)			return false;	break;
		case WM_LESSON:							if(sd && sd->K_LOCK_WM_LESSON)				return false;	break;
		case WM_METALICSOUND:					if(sd && sd->K_LOCK_WM_METALICSOUND)		return false;	break;
		case WM_REVERBERATION:					if(sd && sd->K_LOCK_WM_REVERBERATION)		return false;	break;
		case WM_REVERBERATION_MELEE:			if(sd && sd->K_LOCK_WM_REVERBERATION_MELEE)	return false;	break;
		case WM_REVERBERATION_MAGIC:			if(sd && sd->K_LOCK_WM_REVERBERATION_MAGIC)	return false;	break;
		case WM_DOMINION_IMPULSE:				if(sd && sd->K_LOCK_WM_DOMINION_IMPULSE)	return false;	break;
		case WM_SEVERE_RAINSTORM:				if(sd && sd->K_LOCK_WM_SEVERE_RAINSTORM)	return false;	break;
		case WM_SEVERE_RAINSTORM_MELEE:			if(sd && sd->K_LOCK_WM_SEVERE_RAINSTORM_MELEE) return false;	break;
		case WM_POEMOFNETHERWORLD:				if(sd && sd->K_LOCK_WM_POEMOFNETHERWORLD)	return false;	break;
		case WM_VOICEOFSIREN:					if(sd && sd->K_LOCK_WM_VOICEOFSIREN)		return false;	break;
		case WM_DEADHILLHERE:					if(sd && sd->K_LOCK_WM_DEADHILLHERE)		return false;	break;
		case WM_LULLABY_DEEPSLEEP:				if(sd && sd->K_LOCK_WM_LULLABY_DEEPSLEEP)	return false;	break;
		case WM_SIRCLEOFNATURE:					if(sd && sd->K_LOCK_WM_SIRCLEOFNATURE)		return false;	break;
		case WM_RANDOMIZESPELL:					if(sd && sd->K_LOCK_WM_RANDOMIZESPELL)		return false;	break;
		case WM_GLOOMYDAY:						if(sd && sd->K_LOCK_WM_GLOOMYDAY)			return false;	break;
		case WM_GREAT_ECHO:						if(sd && sd->K_LOCK_WM_GREAT_ECHO)			return false;	break;
		case WM_SONG_OF_MANA:					if(sd && sd->K_LOCK_WM_SONG_OF_MANA)		return false;	break;
		case WM_DANCE_WITH_WUG:					if(sd && sd->K_LOCK_WM_DANCE_WITH_WUG)		return false;	break;
		case WM_SOUND_OF_DESTRUCTION:			if(sd && sd->K_LOCK_WM_SOUND_OF_DESTRUCTION) return false;	break;
		case WM_SATURDAY_NIGHT_FEVER:			if(sd && sd->K_LOCK_WM_SATURDAY_NIGHT_FEVER) return false;	break;
		case WM_LERADS_DEW:						if(sd && sd->K_LOCK_WM_LERADS_DEW)			return false;	break;
		case WM_MELODYOFSINK:					if(sd && sd->K_LOCK_WM_MELODYOFSINK)		return false;	break;
		case WM_BEYOND_OF_WARCRY:				if(sd && sd->K_LOCK_WM_BEYOND_OF_WARCRY)	return false;	break;
		case WM_UNLIMITED_HUMMING_VOICE:		if(sd && sd->K_LOCK_WM_UNLIMITED_HUMMING_VOICE) return false;	break;
		case SO_FIREWALK:						if(sd && sd->K_LOCK_SO_FIREWALK)			return false;	break;
		case SO_ELECTRICWALK:					if(sd && sd->K_LOCK_SO_ELECTRICWALK)		return false;	break;
		case SO_SPELLFIST:						if(sd && sd->K_LOCK_SO_SPELLFIST)			return false;	break;
		case SO_EARTHGRAVE:						if(sd && sd->K_LOCK_SO_EARTHGRAVE)			return false;	break;
		case SO_DIAMONDDUST:					if(sd && sd->K_LOCK_SO_DIAMONDDUST)			return false;	break;
		case SO_POISON_BUSTER:					if(sd && sd->K_LOCK_SO_POISON_BUSTER)		return false;	break;
		case SO_PSYCHIC_WAVE:					if(sd && sd->K_LOCK_SO_PSYCHIC_WAVE)		return false;	break;
		case SO_CLOUD_KILL:						if(sd && sd->K_LOCK_SO_CLOUD_KILL)			return false;	break;
		case SO_STRIKING:						if(sd && sd->K_LOCK_SO_STRIKING)			return false;	break;
		case SO_WARMER:							if(sd && sd->K_LOCK_SO_WARMER)				return false;	break;
		case SO_VACUUM_EXTREME:					if(sd && sd->K_LOCK_SO_VACUUM_EXTREME)		return false;	break;
		case SO_VARETYR_SPEAR:					if(sd && sd->K_LOCK_SO_VARETYR_SPEAR)		return false;	break;
		case SO_ARRULLO:						if(sd && sd->K_LOCK_SO_ARRULLO)				return false;	break;
		case SO_EL_CONTROL:						if(sd && sd->K_LOCK_SO_EL_CONTROL)			return false;	break;
		case SO_EL_ACTION:						if(sd && sd->K_LOCK_SO_EL_ACTION)			return false;	break;
		case SO_EL_ANALYSIS:					if(sd && sd->K_LOCK_SO_EL_ANALYSIS)			return false;	break;
		case SO_EL_SYMPATHY:					if(sd && sd->K_LOCK_SO_EL_SYMPATHY)			return false;	break;
		case SO_EL_CURE:						if(sd && sd->K_LOCK_SO_EL_CURE)				return false;	break;
		case GN_CART_TORNADO:					if(sd && sd->K_LOCK_GN_CART_TORNADO)		return false;	break;
		case GN_CARTCANNON:						if(sd && sd->K_LOCK_GN_CARTCANNON)			return false;	break;
		case GN_THORNS_TRAP:					if(sd && sd->K_LOCK_GN_THORNS_TRAP)			return false;	break;
		case GN_BLOOD_SUCKER:					if(sd && sd->K_LOCK_GN_BLOOD_SUCKER)		return false;	break;
		case GN_SPORE_EXPLOSION:				if(sd && sd->K_LOCK_GN_SPORE_EXPLOSION)		return false;	break;
		case GN_WALLOFTHORN:					if(sd && sd->K_LOCK_GN_WALLOFTHORN)			return false;	break;
		case GN_CRAZYWEED:						if(sd && sd->K_LOCK_GN_CRAZYWEED)			return false;	break;
		case GN_CRAZYWEED_ATK:					if(sd && sd->K_LOCK_GN_CRAZYWEED_ATK)		return false;	break;
		case GN_DEMONIC_FIRE:					if(sd && sd->K_LOCK_GN_DEMONIC_FIRE)		return false;	break;
		case GN_FIRE_EXPANSION:					if(sd && sd->K_LOCK_GN_FIRE_EXPANSION)		return false;	break;
		case GN_FIRE_EXPANSION_SMOKE_POWDER:	if(sd && sd->K_LOCK_GN_FIRE_EXPANSION_SMOKE_POWDER) return false;	break;
		case GN_FIRE_EXPANSION_TEAR_GAS:		if(sd && sd->K_LOCK_GN_FIRE_EXPANSION_TEAR_GAS) return false;	break;
		case GN_FIRE_EXPANSION_ACID:			if(sd && sd->K_LOCK_GN_FIRE_EXPANSION_ACID) return false;	break;
		case GN_HELLS_PLANT:					if(sd && sd->K_LOCK_GN_HELLS_PLANT)			return false;	break;
		case GN_HELLS_PLANT_ATK:				if(sd && sd->K_LOCK_GN_HELLS_PLANT_ATK)		return false;	break;
		case GN_MANDRAGORA:						if(sd && sd->K_LOCK_GN_MANDRAGORA)			return false;	break;
		case GN_SLINGITEM:						if(sd && sd->K_LOCK_GN_SLINGITEM)			return false;	break;
		case GN_SLINGITEM_RANGEMELEEATK:		if(sd && sd->K_LOCK_GN_SLINGITEM_RANGEMELEEATK) return false;	break;
		case GN_CHANGEMATERIAL:					if(sd && sd->K_LOCK_GN_CHANGEMATERIAL)		return false;	break;
		case AB_SECRAMENT:						if(sd && sd->K_LOCK_AB_SECRAMENT)			return false;	break;
		case SR_HOWLINGOFLION:					if(sd && sd->K_LOCK_SR_HOWLINGOFLION)		return false;	break;
		case SR_RIDEINLIGHTNING:				if(sd && sd->K_LOCK_SR_RIDEINLIGHTNING)		return false;	break;
		case LG_OVERBRAND_BRANDISH:				if(sd && sd->K_LOCK_LG_OVERBRAND_BRANDISH)	return false;	break;
		case LG_OVERBRAND_PLUSATK:				if(sd && sd->K_LOCK_LG_OVERBRAND_PLUSATK)	return false;	break;
		case RL_GLITTERING_GREED:				if(sd && sd->K_LOCK_RL_GLITTERING_GREED)	return false;	break;
///		case RL_GLITTERING_GREED_ATK:			if(sd && sd->K_LOCK_RL_GLITTERING_GREED_ATK) return false;	break;
		case RL_RICHS_COIN:						if(sd && sd->K_LOCK_RL_RICHS_COIN)			return false;	break;
		case RL_MASS_SPIRAL:					if(sd && sd->K_LOCK_RL_MASS_SPIRAL)			return false;	break;
		case RL_BANISHING_BUSTER:				if(sd && sd->K_LOCK_RL_BANISHING_BUSTER)	return false;	break;
		case RL_B_TRAP:							if(sd && sd->K_LOCK_RL_B_TRAP)				return false;	break;
		case RL_S_STORM:						if(sd && sd->K_LOCK_RL_S_STORM)				return false;	break;
		case RL_E_CHAIN:						if(sd && sd->K_LOCK_RL_E_CHAIN)				return false;	break;
		case RL_QD_SHOT:						if(sd && sd->K_LOCK_RL_QD_SHOT)				return false;	break;
		case RL_C_MARKER:						if(sd && sd->K_LOCK_RL_C_MARKER)			return false;	break;
		case RL_FIREDANCE:						if(sd && sd->K_LOCK_RL_FIREDANCE)			return false;	break;
		case RL_H_MINE:							if(sd && sd->K_LOCK_RL_H_MINE)				return false;	break;
		case RL_P_ALTER:						if(sd && sd->K_LOCK_RL_P_ALTER)				return false;	break;
		case RL_FALLEN_ANGEL:					if(sd && sd->K_LOCK_RL_FALLEN_ANGEL)		return false;	break;
		case RL_R_TRIP:							if(sd && sd->K_LOCK_RL_R_TRIP)				return false;	break;
		case RL_R_TRIP_PLUSATK:					if(sd && sd->K_LOCK_RL_R_TRIP_PLUSATK)		return false;	break;
		case RL_D_TAIL:							if(sd && sd->K_LOCK_RL_D_TAIL)				return false;	break;
		case RL_FIRE_RAIN:						if(sd && sd->K_LOCK_RL_FIRE_RAIN)			return false;	break;
		case RL_HEAT_BARREL:					if(sd && sd->K_LOCK_RL_HEAT_BARREL)			return false;	break;
		case RL_AM_BLAST:						if(sd && sd->K_LOCK_RL_AM_BLAST)			return false;	break;
		case RL_SLUGSHOT:						if(sd && sd->K_LOCK_RL_SLUGSHOT)			return false;	break;
		case RL_HAMMER_OF_GOD:					if(sd && sd->K_LOCK_RL_HAMMER_OF_GOD)		return false;	break;
		case RL_B_FLICKER_ATK:					if(sd && sd->K_LOCK_RL_B_FLICKER_ATK)		return false;	break;
		case KO_YAMIKUMO:						if(sd && sd->K_LOCK_KO_YAMIKUMO)			return false;	break;
		case KO_JYUMONJIKIRI:					if(sd && sd->K_LOCK_KO_JYUMONJIKIRI)		return false;	break;
		case KO_SETSUDAN:						if(sd && sd->K_LOCK_KO_SETSUDAN)			return false;	break;
		case KO_BAKURETSU:						if(sd && sd->K_LOCK_KO_BAKURETSU)			return false;	break;
		case KO_HAPPOKUNAI:						if(sd && sd->K_LOCK_KO_HAPPOKUNAI)			return false;	break;
		case KO_MUCHANAGE:						if(sd && sd->K_LOCK_KO_MUCHANAGE)			return false;	break;
		case KO_HUUMARANKA:						if(sd && sd->K_LOCK_KO_HUUMARANKA)			return false;	break;
		case KO_MAKIBISHI:						if(sd && sd->K_LOCK_KO_MAKIBISHI)			return false;	break;
		case KO_MEIKYOUSISUI:					if(sd && sd->K_LOCK_KO_MEIKYOUSISUI)		return false;	break;
		case KO_ZANZOU:							if(sd && sd->K_LOCK_KO_ZANZOU)				return false;	break;
		case KO_KYOUGAKU:						if(sd && sd->K_LOCK_KO_KYOUGAKU)			return false;	break;
		case KO_JYUSATSU:						if(sd && sd->K_LOCK_KO_JYUSATSU)			return false;	break;
		case KO_KAHU_ENTEN:						if(sd && sd->K_LOCK_KO_KAHU_ENTEN)			return false;	break;
		case KO_HYOUHU_HUBUKI:					if(sd && sd->K_LOCK_KO_HYOUHU_HUBUKI)		return false;	break;
		case KO_KAZEHU_SEIRAN:					if(sd && sd->K_LOCK_KO_KAZEHU_SEIRAN)		return false;	break;
		case KO_DOHU_KOUKAI:					if(sd && sd->K_LOCK_KO_DOHU_KOUKAI)			return false;	break;
		case KO_KAIHOU:							if(sd && sd->K_LOCK_KO_KAIHOU)				return false;	break;
		case KO_ZENKAI:							if(sd && sd->K_LOCK_KO_ZENKAI)				return false;	break;
		case KO_GENWAKU:						if(sd && sd->K_LOCK_KO_GENWAKU)				return false;	break;
		case KO_IZAYOI:							if(sd && sd->K_LOCK_KO_IZAYOI)				return false;	break;
		case KG_KAGEHUMI:						if(sd && sd->K_LOCK_KG_KAGEHUMI)			return false;	break;
		case KG_KYOMU:							if(sd && sd->K_LOCK_KG_KYOMU)				return false;	break;
		case KG_KAGEMUSYA:						if(sd && sd->K_LOCK_KG_KAGEMUSYA)			return false;	break;
		case OB_ZANGETSU:						if(sd && sd->K_LOCK_OB_ZANGETSU)			return false;	break;
		case OB_OBOROGENSOU:					if(sd && sd->K_LOCK_OB_OBOROGENSOU)			return false;	break;
		case OB_OBOROGENSOU_TRANSITION_ATK:		if(sd && sd->K_LOCK_OB_OBOROGENSOU_TRANSITION_ATK) return false;	break;
		case OB_AKAITSUKI:						if(sd && sd->K_LOCK_OB_AKAITSUKI)			return false;	break;
		case GC_DARKCROW:						if(sd && sd->K_LOCK_GC_DARKCROW)			return false;	break;
		case RA_UNLIMIT:						if(sd && sd->K_LOCK_RA_UNLIMIT)				return false;	break;
		case GN_ILLUSIONDOPING:					if(sd && sd->K_LOCK_GN_ILLUSIONDOPING)		return false;	break;
		case RK_DRAGONBREATH_WATER:				if(sd && sd->K_LOCK_RK_DRAGONBREATH_WATER)	return false;	break;
		case RK_LUXANIMA:						if(sd && sd->K_LOCK_RK_LUXANIMA)			return false;	break;
		case NC_MAGMA_ERUPTION:					if(sd && sd->K_LOCK_NC_MAGMA_ERUPTION)		return false;	break;
		case WM_FRIGG_SONG:						if(sd && sd->K_LOCK_WM_FRIGG_SONG)			return false;	break;
		case SO_ELEMENTAL_SHIELD:				if(sd && sd->K_LOCK_SO_ELEMENTAL_SHIELD)	return false;	break;
		case SR_FLASHCOMBO:						if(sd && sd->K_LOCK_SR_FLASHCOMBO)			return false;	break;
		case SC_ESCAPE:							if(sd && sd->K_LOCK_SC_ESCAPE)				return false;	break;
		case AB_OFFERTORIUM:					if(sd && sd->K_LOCK_AB_OFFERTORIUM)			return false;	break;
		case WL_TELEKINESIS_INTENSE:			if(sd && sd->K_LOCK_WL_TELEKINESIS_INTENSE) return false;	break;
		case ALL_FULL_THROTTLE:					if(sd && sd->K_LOCK_ALL_FULL_THROTTLE)		return false;	break;
		case SU_BITE:							if(sd && sd->K_LOCK_SU_BITE)				return false;	break;
		case SU_SCRATCH:						if(sd && sd->K_LOCK_SU_SCRATCH)				return false;	break;
		case SU_STOOP:							if(sd && sd->K_LOCK_SU_STOOP)				return false;	break;
		case SU_LOPE:							if(sd && sd->K_LOCK_SU_LOPE)				return false;	break;
		case SU_SPRITEMABLE:					if(sd && sd->K_LOCK_SU_SPRITEMABLE)			return false;	break;
		case SU_POWEROFLAND:					if(sd && sd->K_LOCK_SU_POWEROFLAND)			return false;	break;
		case SU_SV_STEMSPEAR:					if(sd && sd->K_LOCK_SU_SV_STEMSPEAR)		return false;	break;
		case SU_CN_POWDERING:					if(sd && sd->K_LOCK_SU_CN_POWDERING)		return false;	break;
		case SU_CN_METEOR:						if(sd && sd->K_LOCK_SU_CN_METEOR)			return false;	break;
		case SU_SV_ROOTTWIST:					if(sd && sd->K_LOCK_SU_SV_ROOTTWIST)		return false;	break;
		case SU_SV_ROOTTWIST_ATK:				if(sd && sd->K_LOCK_SU_SV_ROOTTWIST_ATK)	return false;	break;
		case SU_POWEROFLIFE:					if(sd && sd->K_LOCK_SU_POWEROFLIFE)			return false;	break;
		case SU_SCAROFTAROU:					if(sd && sd->K_LOCK_SU_SCAROFTAROU)			return false;	break;
		case SU_PICKYPECK:						if(sd && sd->K_LOCK_SU_PICKYPECK)			return false;	break;
		case SU_PICKYPECK_DOUBLE_ATK:			if(sd && sd->K_LOCK_SU_PICKYPECK_DOUBLE_ATK) return false;	break;
		case SU_ARCLOUSEDASH:					if(sd && sd->K_LOCK_SU_ARCLOUSEDASH)		return false;	break;
		case SU_LUNATICCARROTBEAT:				if(sd && sd->K_LOCK_SU_LUNATICCARROTBEAT)	return false;	break;
		case SU_POWEROFSEA:						if(sd && sd->K_LOCK_SU_POWEROFSEA)			return false;	break;
		case SU_TUNABELLY:						if(sd && sd->K_LOCK_SU_TUNABELLY)			return false;	break;
		case SU_TUNAPARTY:						if(sd && sd->K_LOCK_SU_TUNAPARTY)			return false;	break;
		case SU_BUNCHOFSHRIMP:					if(sd && sd->K_LOCK_SU_BUNCHOFSHRIMP)		return false;	break;
		case SU_FRESHSHRIMP:					if(sd && sd->K_LOCK_SU_FRESHSHRIMP)			return false;	break;
		case SU_CN_METEOR2:						if(sd && sd->K_LOCK_SU_CN_METEOR2)			return false;	break;
		case SU_LUNATICCARROTBEAT2:				if(sd && sd->K_LOCK_SU_LUNATICCARROTBEAT2)	return false;	break;
		case SU_SOULATTACK:						if(sd && sd->K_LOCK_SU_SOULATTACK)			return false;	break;
		case SU_POWEROFFLOCK:					if(sd && sd->K_LOCK_SU_POWEROFFLOCK)		return false;	break;
		case SU_SVG_SPIRIT:						if(sd && sd->K_LOCK_SU_SVG_SPIRIT)			return false;	break;
		case SU_HISS:							if(sd && sd->K_LOCK_SU_HISS)				return false;	break;
		case SU_NYANGGRASS:						if(sd && sd->K_LOCK_SU_NYANGGRASS)			return false;	break;
		case SU_GROOMING:						if(sd && sd->K_LOCK_SU_GROOMING)			return false;	break;
		case SU_PURRING:						if(sd && sd->K_LOCK_SU_PURRING)				return false;	break;
		case SU_SHRIMPARTY:						if(sd && sd->K_LOCK_SU_SHRIMPARTY)			return false;	break;
		case SU_SPIRITOFLIFE:					if(sd && sd->K_LOCK_SU_SPIRITOFLIFE)		return false;	break;
		case SU_MEOWMEOW:						if(sd && sd->K_LOCK_SU_MEOWMEOW)			return false;	break;
		case SU_SPIRITOFLAND:					if(sd && sd->K_LOCK_SU_SPIRITOFLAND)		return false;	break;
		case SU_CHATTERING:						if(sd && sd->K_LOCK_SU_CHATTERING)			return false;	break;
		case SU_SPIRITOFSEA:					if(sd && sd->K_LOCK_SU_SPIRITOFSEA)			return false;	break;

		default:
			if(sd && sd->K_LOCK_DEFAULT)
				return false;
			break;
	}
